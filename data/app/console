#!/usr/bin/env php
<?php

use \Symfony\Component\Console\Command;
use \Symfony\Component\Console\Input;
use \Symfony\Component\Console\Output;

// if you don't want to setup permissions the proper way, just uncomment the following PHP line
// read http://symfony.com/doc/current/book/installation.html#configuration-and-setup for more information
umask(0000);

set_time_limit(0);

require_once __DIR__.'/bootstrap.php.cache';
require_once __DIR__.'/AppKernel.php';

use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;

$input = new ArgvInput();
$env = $input->getParameterOption(array('--env', '-e'), getenv('SYMFONY_ENV') ?: 'dev');
$debug = getenv('SYMFONY_DEBUG') !== '0' && !$input->hasParameterOption(array('--no-debug', '')) && $env !== 'prod';

if ($debug) {
    Debug::enable();
}

$kernel = new AppKernel($env, $debug);
$application = new Application($kernel);

$application->add(new Command\Command('muzar:rebuid-data'))
	->setCode(function(Input\InputInterface $input, Output\OutputInterface $output) use ($application) {
		$application->find('doctrine:schema:drop')->run(new Input\StringInput('doctrine:schema:drop --force'), $output);
		$application->find('doctrine:schema:create')->run(new Input\StringInput('doctrine:schema:create'), $output);
		$application->find('doctrine:fixtures:load')->run(new Input\StringInput('doctrine:fixtures:load --no-interaction'), $output);
		$application->find('fos:elastica:populate')->run(new Input\StringInput('fos:elastica:populate'), $output);
		$application->find('oauth:client:create')->run(new Input\StringInput('oauth:client:create --grant-type="password" -p web'), $output);
	});

$application->run($input);
